name: Release Workflow

on:
    push:
        branches: ["release/**"]

permissions:
    contents: write

jobs:
    build:
        name: Build
        runs-on: ubuntu-latest
        steps:
            - name: Checkout code
              uses: actions/checkout@v3

            - name: Setup .NET Core
              uses: actions/setup-dotnet@v3
              with:
                dotnet-version: '8.0.x'
            
            - name: Restore dependencies
              run: dotnet restore
              working-directory: src

            - name: Build solution
              run: dotnet build --configuration Release --no-restore
              working-directory: src
    
    unit_test:
        name: Unit Tests
        runs-on: ubuntu-latest
        needs: build
        steps:
            - name: Checkout code
              uses: actions/checkout@v3

            - name: Setup .NET Core
              uses: actions/setup-dotnet@v3
              with:
                dotnet-version: '8.0.x'
            
            - name: Restore dependencies
              run: dotnet restore
              working-directory: tests/Postech.PhaseOne.GroupEight.TechChallenge.UnitTests

            - name: Build test project
              run: dotnet build --no-restore
              working-directory: tests/Postech.PhaseOne.GroupEight.TechChallenge.UnitTests

            - name: Run tests
              run: dotnet test --verbosity normal
              working-directory: tests/Postech.PhaseOne.GroupEight.TechChallenge.UnitTests

    sonarcloud:
      name: SonarCloud Scan
      runs-on: ubuntu-latest
      needs: [unit_test]
      steps:
        - name: Checkout code
          uses: actions/checkout@v3
          with:
            fetch-depth: 0

        - name: Setup .NET
          uses: actions/setup-dotnet@v3
          with:
            dotnet-version: '8.0.x'
        
        - name: Install Java 17
          uses: actions/setup-java@v3
          with:
            java-version: '17'
            distribution: 'temurin'

        - name: Cache SonarCloud packages
          uses: actions/cache@v3
          with:
            path: ~\sonar\cache
            key: ${{ runner.os }}-sonar
            restore-keys: ${{ runner.os }}-sonar

        - name: Cache SonarCloud scanner
          id: cache-sonar-scanner
          uses: actions/cache@v3
          with:
            path: .\.sonar\scanner
            key: ${{ runner.os }}-sonar-scanner
            restore-keys: ${{ runner.os }}-sonar-scanner

        - name: Install SonarCloud scanner
          if: steps.cache-sonar-scanner.outputs.cache-hit != 'true'
          run: |
            mkdir -p ./.sonar/scanner
            dotnet tool update dotnet-sonarscanner --tool-path ./.sonar/scanner

        - name: Install dotnet coverage
          run: dotnet tool install --global dotnet-coverage

        - name: Solution Scan
          env:
            SONAR_TOKEN: ${{secrets.SONAR_TOKEN}}
            GITHUB_TOKEN: ${{ secrets.PAT_TOKEN }}
          run: |
           ./.sonar/scanner/dotnet-sonarscanner begin /k:"lucasdirani_TechChallenge-Postech-4NETT-FaseUm" /o:"tech-challenge-arquitetura-sistemas-net" /d:sonar.token="${{ secrets.SONAR_TOKEN }}" /d:sonar.cs.vscoveragexml.reportsPaths=coverage.xml /d:sonar.host.url="https://sonarcloud.io" 
           dotnet build src/Postech.PhaseOne.GroupEight.TechChallenge.sln --no-incremental
           ~/.dotnet/tools/dotnet-coverage collect "dotnet test src/Postech.PhaseOne.GroupEight.TechChallenge.sln" -f xml -o "coverage.xml"
           cat coverage.xml
           ./.sonar/scanner/dotnet-sonarscanner end /d:sonar.token="${{ secrets.SONAR_TOKEN }}"

    create_pr:
      name: Create Pull Request
      runs-on: ubuntu-latest
      needs: [sonarcloud]
      steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Create Pull Request To Main
        run: |
          cd $GITHUB_WORKSPACE
          gh auth login --with-token <<< "${{ secrets.PAT_TOKEN }}"
          gh pr create -B main --title 'PR automático da branch ${{ github.head_ref || github.ref_name }} para main' --body 'Pull Request gerado automaticamente pelo Github Actions' || gh pr edit -B develop --title 'Atualização do Pull Request gerado automaticamente pelo Github Actions' --body 'Pull Request gerado automaticamente pelo Github Actions'